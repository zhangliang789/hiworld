<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.kingc.risk.dao.SynsettingDao">
    <resultMap id="SynsettingMap" type="cn.com.kingc.risk.model.Synsetting">
        <result property="coalMineName" column="coalMineName" jdbcType="VARCHAR"/>
        <result property="frameWorkID" column="FrameWorkID" jdbcType="VARCHAR"/>
        <result property="synServiceBaseAddress" column="SynServiceBaseAddress" jdbcType="VARCHAR"/>
        <result property="synMineCode" column="SynMineCode" jdbcType="VARCHAR"/>
        <result property="synToken" column="SynToken" jdbcType="VARCHAR"/>
        <result property="apiKey" column="ApiKey" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        coalMineName ,
        FrameWorkID ,
        SynServiceBaseAddress ,
        SynMineCode ,
        SynToken ,
        ApiKey
    </sql>


    <!--新增一条记录-->
    <insert id="addSynsetting" parameterType="cn.com.kingc.risk.model.Synsetting"
            useGeneratedKeys="true" keyProperty="frameWorkID">
        insert into synsetting (
            coalMineName,
            FrameWorkID,
            SynServiceBaseAddress,
            SynMineCode,
            SynToken,
            ApiKey
        )
        values(
            #{coalMineName, jdbcType=VARCHAR}  ,
            #{frameWorkID, jdbcType=VARCHAR}  ,
            #{synServiceBaseAddress, jdbcType=VARCHAR}  ,
            #{synMineCode, jdbcType=VARCHAR}  ,
            #{synToken, jdbcType=VARCHAR} ,
            #{apiKey, jdbcType=VARCHAR}
        )
    </insert>

    <!--批量新增记录-->
    <insert id="addSynsettingList" parameterType="java.util.List">
        insert into synsetting(
        coalMineName,
        FrameWorkID,
        SynServiceBaseAddress,
        SynMineCode,
        SynToken,
        ApiKey
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.coalMineName, jdbcType=VARCHAR} ,
            #{item.frameWorkID, jdbcType=VARCHAR} ,
            #{item.synServiceBaseAddress, jdbcType=VARCHAR} ,
            #{item.synMineCode, jdbcType=VARCHAR} ,
            #{item.synToken, jdbcType=VARCHAR},
            #{item.apiKey, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <!--删除记录-->
    <delete id="deleteSynsetting" parameterType="cn.com.kingc.risk.model.Synsetting">
        DELETE FROM synsetting
        where 1=1
        <if test="coalMineName!= null and coalMineName!= ''">
            and coalMineName = #{coalMineName, jdbcType=VARCHAR}
        </if>
        <if test="frameWorkID!= null and frameWorkID!= ''">
            and FrameWorkID = #{frameWorkID, jdbcType=VARCHAR}
        </if>
        <if test="synServiceBaseAddress!= null and synServiceBaseAddress!= ''">
            and SynServiceBaseAddress = #{synServiceBaseAddress, jdbcType=VARCHAR}
        </if>
        <if test="synMineCode!= null and synMineCode!= ''">
            and SynMineCode = #{synMineCode, jdbcType=VARCHAR}
        </if>
        <if test="synToken!= null and synToken!= ''">
            and SynToken = #{synToken, jdbcType=VARCHAR}
        </if>
        <if test="apiKey!= null and apiKey!= ''">
            and ApiKey = #{apiKey, jdbcType=VARCHAR}
        </if>
    </delete>

    <!--删除一条记录-->
    <delete id="deleteSynsettingByID" parameterType="java.lang.String">
        DELETE FROM synsetting
        WHERE  FrameWorkID = #{frameWorkID,jdbcType=VARCHAR}
    </delete>

    <!--批量删除记录-->
    <insert id="deleteSynsettingList" parameterType="java.util.List">
        DELETE FROM synsetting
        WHERE FrameWorkID IN
        <foreach item="item" collection="list" separator=",">
            (
            #{item.frameWorkID, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <!--更新记录-->
    <update id="updateSynsetting" parameterType="cn.com.kingc.risk.model.Synsetting">
        UPDATE synsetting
        <set>
            <if test="coalMineName!= null ">
                coalMineName = #{coalMineName, jdbcType=VARCHAR} ,
            </if>
            <if test="frameWorkID!= null ">
                FrameWorkID = #{frameWorkID, jdbcType=VARCHAR} ,
            </if>
            <if test="synServiceBaseAddress!= null ">
                SynServiceBaseAddress = #{synServiceBaseAddress, jdbcType=VARCHAR} ,
            </if>
            <if test="synMineCode!= null ">
                SynMineCode = #{synMineCode, jdbcType=VARCHAR} ,
            </if>
            <if test="synToken!= null ">
                SynToken = #{synToken, jdbcType=VARCHAR} ,
            </if>
            <if test="apiKey!= null ">
                ApiKey = #{apiKey, jdbcType=VARCHAR}
            </if>
        </set>
        WHERE FrameWorkID = #{frameWorkID,jdbcType=VARCHAR}
    </update>

    <!--根据主键查询记录-->
    <select id="getSynsetting" resultMap="SynsettingMap"
            parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from synsetting
        WHERE FrameWorkID = #{frameWorkID,jdbcType=VARCHAR}
    </select>


    <!--判断对象是否已经存在-->
    <select id="synsettingIsExist" resultType="java.lang.Integer" parameterType="cn.com.kingc.risk.model.Synsetting">
        select count(*)
        from synsetting
        where 1=1
        <if test="coalMineName!= null ">
            and coalMineName = #{coalMineName, jdbcType=VARCHAR}
        </if>
        <if test="frameWorkID!= null ">
            and FrameWorkID = #{frameWorkID, jdbcType=VARCHAR}
        </if>
        <if test="synServiceBaseAddress!= null ">
            and SynServiceBaseAddress = #{synServiceBaseAddress, jdbcType=VARCHAR}
        </if>
        <if test="synMineCode!= null ">
            and SynMineCode = #{synMineCode, jdbcType=VARCHAR}
        </if>
        <if test="synToken!= null ">
            and SynToken = #{synToken, jdbcType=VARCHAR}
        </if>
        <if test="apiKey!= null ">
            and ApiKey = #{apiKey, jdbcType=VARCHAR}
        </if>
    </select>

</mapper>
