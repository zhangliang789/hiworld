<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

  <context-param> <!--全局范围内环境参数初始化 -->
    <param-name>contextConfigLocation</param-name>          <!--参数名称 -->
    <param-value>classpath:spring-*.xml
    </param-value>     <!--参数取值 -->
  </context-param>

  <!--以下配置的加载顺序:先 ServletContext >> context-param >> listener >> filter >>
      servlet >> spring -->

  <filter>
    <filter-name>SessionFilter</filter-name>
    <filter-class>org.platform4j.filter.SessionFilter</filter-class>
    <init-param>
      <param-name>logonStrings</param-name>
      <param-value>http://platform.cnmineqs.net/login</param-value>
    </init-param>
    <!--<init-param>
      <param-name>currurl</param-name>
      <param-value>集群名称;域名</param-value>
    </init-param>-->
    <init-param>
      <param-name>productCode</param-name>
      <param-value>CoalRisk</param-value>
    </init-param>
    <init-param>
      <param-name>menusStrings</param-name>
      <param-value>.do</param-value>
    </init-param>
    <init-param>
      <param-name>currurl</param-name>
      <param-value>fengkong;trine.cnmineqs.net</param-value>
    </init-param>
    <init-param>
      <param-name>nopower</param-name>
      <param-value>login;signout</param-value>
    </init-param>
    <init-param>
      <param-name>includeStrings</param-name>
      <param-value>.do</param-value>
    </init-param>
    <init-param>
      <param-name>redirectPath</param-name>
      <param-value>http://platform.cnmineqs.net/login</param-value>
    </init-param>
    <init-param>
      <param-name>disabletestfilter</param-name>
      <param-value>N</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>SessionFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>



  <!--过滤器配置 -->
  <!--例:编码过滤器 -->
  <filter>      <!-- 用来声明filter的相关设定,过滤器可以截取和修改一个Servlet或JSP页面的请求或从一个Servlet或JSP页面发出的响应 -->
    <filter-name>encodingFilter</filter-name>     <!--指定filter的名字 -->
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class> <!--定义filter的类的名称 -->
    <async-supported>true</async-supported>     <!--设置是否启用异步支持 -->
    <init-param><!--用来定义参数,若在Servlet可以使用下列方法来获得:String param_name=getServletContext().getInitParamter("param-name里面的值"); -->
      <param-name>encoding</param-name>   <!--参数名称 -->
      <param-value>UTF-8</param-value> <!--参数值 -->
    </init-param>
  </filter>
  <filter-mapping><!--用来定义filter所对应的URL -->
    <filter-name>encodingFilter</filter-name>     <!--指定对应filter的名字 -->
    <url-pattern>/*</url-pattern>       <!--指定filter所对应的URL -->
  </filter-mapping>

  <!--监听器配置 -->
  <!--例:spring监听器 -->
  <listener>        <!--用来设定Listener接口 -->
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class><!--定义Listener的类名称 -->
  </listener>
  <!-- 防止Spring内存溢出监听器 -->
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.platform4j.filter.SessionContext</listener-class>
  </listener>
  <!--servlet配置 -->
  <servlet>     <!--用来声明一个servlet的数据 -->
    <servlet-name>SpringMVC</servlet-name>  <!--指定servlet的名称 -->
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> <!--指定servlet的类名称,这里配置了前端控制器 -->
    <init-param><!--用来定义参数,可有多个init-param。在servlet类中通过getInitParamenter(String
				name)方法访问初始化参数 -->
      <param-name>contextConfigLocation</param-name>  <!--参数名称 -->
      <param-value>classpath:spring-mvc.xml</param-value> <!--参数值 -->
    </init-param>
    <load-on-startup>1</load-on-startup><!--当值为正数或零时：Servlet容器先加载数值小的servlet，再依次加载其他数值大的servlet. -->
    <async-supported>true</async-supported><!--设置是否启用异步支持 -->
  </servlet>
  <servlet-mapping><!--用来定义servlet所对应的URL -->
    <servlet-name>SpringMVC</servlet-name>  <!--指定servlet的名称 -->
    <url-pattern>/</url-pattern>        <!--指定servlet所对应的URL -->
  </servlet-mapping>

  <error-page>
    <error-code>404</error-code>
    <location>/WEB-INF/jsp/404.jsp</location>
  </error-page>

  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:log4j.properties</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>

  <!--&lt;!&ndash; 判断是否登录 &ndash;&gt;-->
  <!--<filter>-->
  <!--<filter-name>SessionFilter</filter-name>-->
  <!--<filter-class>cn.com.kingc.risk.config.servlet.SessionFilter</filter-class>-->
  <!--<init-param>-->
  <!--<param-name>redirectPath</param-name>-->
  <!--<param-value>http://60.216.104.169:8080/kplatform4j-web/</param-value>-->
  <!--</init-param>-->
  <!--<init-param>-->
  <!--<param-name>disablefilter</param-name>-->
  <!--<param-value>N</param-value>-->
  <!--</init-param>-->
  <!--</filter>-->
  <!--<filter-mapping>-->
  <!--<filter-name>SessionFilter</filter-name>-->
  <!--<url-pattern>*.do</url-pattern>-->
  <!--</filter-mapping>-->

  <!--欢迎页面配置 -->
  <welcome-file-list><!--定义首页列单. -->
    <welcome-file>/Risk-index.jsp</welcome-file> <!--用来指定首页文件名称.我们可以用<welcome-file>指定几个首页,而服务器会依照设定的顺序来找首页. -->

  </welcome-file-list>
  <filter>
    <filter-name>DruidWebStatFilter</filter-name>
    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
    <init-param>
      <param-name>exclusions</param-name>
      <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,*.jsp,/druid/*,/download/*</param-value>
    </init-param>
    <init-param>
      <param-name>sessionStatMaxCount</param-name>
      <param-value>2000</param-value>
    </init-param>
    <init-param>
      <param-name>sessionStatEnable</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>principalSessionName</param-name>
      <param-value>session_user_key</param-value>
    </init-param>
    <init-param>
      <param-name>profileEnable</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>DruidWebStatFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <!-- 配置 Druid 监控信息显示页面 -->
  <servlet>
    <servlet-name>DruidStatView</servlet-name>
    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
    <init-param>
      <!-- 允许清空统计数据 -->
      <param-name>resetEnable</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <!-- 用户名 -->
      <param-name>loginUsername</param-name>
      <param-value>kingcdruid</param-value>
    </init-param>
    <init-param>
      <!-- 密码 -->
      <param-name>loginPassword</param-name>
      <param-value>kingcdruid</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>DruidStatView</servlet-name>
    <url-pattern>/druid/*</url-pattern>
  </servlet-mapping>

</web-app>